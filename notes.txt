not listesi:

önemli linkler:

1- https://simpleisbetterthancomplex.com/tips/2018/02/10/django-tip-22-designing-better-models.html
2- https://simpleisbetterthancomplex.com/tips/2016/07/25/django-tip-8-blank-or-null.html
3- https://betterprogramming.pub/clean-code-principles-in-django-b0563a4e12f5
4- https://betterprogramming.pub/refactors-you-need-to-know-to-for-your-django-project-8a56b0dee34f

5- https://docs.djangoproject.com/en/5.1/topics/auth/customizing/#referencing-the-user-model  //for referencing the user


bildiğimden emin olmam gerekenler : 

How to create a Django project
Django App -> düz app?
Django Model -> modeller database logic
Django Migration ->
View -> application logic
Template -> yazdırıldığı yer
URL -> sayfalarda hangi view'ın kullanılacağı yol
Django Admin -> kontrol paneli /admin/
Django Form -> BUNA BAKILACAK
Bootstrap -> Basit css
Authentication -> CSFR LoginRequiredMixin
Django ORM -> Kodlama query
Class Based Views (never use function based system in project) -> yaptığım bütün viewlar
Generic Class-Based View (Learn it but do not use them in your project. Do not use CreateView, UpdateView, ListView  etc.)
Paginator -> sayfalama
Decorators & Mixins
Deployment

             related_name tersine işlemler için var. Nasıl yani?

class Ogrenci(models.Model):
    ad = models.CharField(max_length=100)

class Ders(models.Model):
    baslik = models.CharField(max_length=200)
    ogrenciler = models.ManyToManyField(Ogrenci, related_name='kayitli_dersler')

ogrenci = Ogrenci.objects.get(id=1)
dersler = ogrenci.kayitli_dersler.all()

             bunun sonucunda 1 numaralı öğrenci objesinin kayıtlı olduğu bütün derslere erişebiliyoruz




Null: It is database-related. Defines if a given database column will accept null values or not.
Blank: It is validation-related. It will be used during forms validation, when calling form.is_valid()





hedef proje "4.0"  ilerlemesi:
modellenenler = courses, semesters, rooms,
foreignkey = a blog linked to its user



DJANGO REQUEST NASIL PROCESSLIYOR:

https://docs.djangoproject.com/en/5.1/topics/http/urls/



Hatırlamalık bazı komutlar:


python manage.py magemigrations APP_NAME (olmasa da olur appname)
python manage.py sqlmigrate APP_NAME MIGRATION_NUMBER
python manage.py migrate
.set_password("")


basit account özelliklerini view - template kullanarak yaptım ve yapıyorum
complex şekil şukul şeyleri apiview react kullanarak yapacağım


02.09 Hedef:: My Courses, General Courses, Semester List ve


'''
Correct. This doesn’t work because you’re explicitly setting the password
field to the plain-text password. You need to leave the password field
blank when you create the User object, then use the set_password
function to set the password to its hashed value before calling save on that object.
'''





    def get(self, request, student_number):
        if request.user.student_number == student_number:
            user = get_object_or_404(CustomUser, student_number=student_number)
            form = self.form_class()
            return render(request, self.template_name, {'form': form, 'user': user})
        else:
            return redirect('login')

    def post(self, request, student_number):
        if request.user.student_number == student_number:
            user = get_object_or_404(CustomUser, student_number=student_number)
            form = self.form_class(request.POST)
            if form.is_valid():
                user = form.save()
                user.save()
                return redirect(reverse('blank.html'))


                ek düşünce : semester da academic dream'a eklenebilir. Çünkü neden olmasın7

Yapı amaçları :

         CustomUser = Öğrenci ve Öğretmen için template oluşturmak
         Courses = Bir dersin hayal edebileceğim her özelliği
         Section = dersten bağımsız yeni class farklı bir erişim stili için
         Curriculumn = Bir Konu için gerekli olan ders listesi
         AcademicDream = birey alınan ders + grade takip classı
         Question = soru sistemi
         CustomText = cevap / yorum sistemi



Bugün yapılacaklar:
    1- question delete
    2 - My questions sayfası (paginator eklenebilir)
    3 - chat sayfası potansiyel reklam (topluluklar için)
    5- 10 ile 20 arası potato seviyesi olabilir, şu anda çakışan sectionlar hakkında bir şey yapmıyorum


3 haftalık yapılacaklar listesi:


    1- Model isim ve özellik temizliği (en son)
    2- Viewlerdeki eksiklikleri temizlemek:
        2.1- Öğrenci derslerini takip edebilmeli - Courses
        2.2- Kendi bütün sorularına bakabilmeli - Questions
        2.3- Dexter'da yapılan tablo kayıt altına alınmıyor almalı, - AcademicDreams
        2.4- Özel section listeleri oluşturan bir backtrack algo777y
        2.5 all questions da arama bölümü eklenebilir
        2.6- upvote downvote şekillerini değiştir
        2.7- Tags uzat create
        2.8 edit question
        2.9 zaman olursa paginatorlar ajax yapılabilir




    3- Websocket toplu not alma

MAC sadece adlara tıklanabiliyor genel basılabilir yapılabilir



nav red
nav white

he CSS above does style the color of the text red and not white even if the navbar class is in the HTML markup listed first.
The latest / last defined CSS is important. There are more rules which define the priority of the stylings based on CSS selectors.
I would suggest that you put some time in reading here because you need to build up some basic knowledge on how CSS works.


flashpoint
justice league 3000
earth 2


collab not alma?!
websocket